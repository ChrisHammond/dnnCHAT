/*
	This script is used to create the new Chat Room functionality, and the table to associate messages with a specific room
*/

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}DnnChat_Rooms]') AND type in (N'U'))
	drop table {databaseOwner}{objectQualifier}DnnChat_Rooms
GO

IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}DnnChat_Rooms]') AND type in (N'U'))

CREATE TABLE {databaseOwner}{objectQualifier}DnnChat_Rooms(
	[RoomId] [uniqueidentifier] NOT NULL,
	[RoomName] [nvarchar](150) NOT NULL,
	[Enabled] [bit] NOT NULL,
	[RoomDescription] [nvarchar](max) NULL,
	[RoomWelcome] [nvarchar](max) NULL,
	[Private] [bit] NULL,
	[RoomPassword] [nvarchar](50) NULL,
	[CreatedDate] [datetime] NOT NULL,
	[CreatedByUserId] [int] NOT NULL,
	[LastUpdatedByUserId] [int] NOT NULL,
	[LastUpdatedDate] [datetime] NOT NULL,
	[ModuleId] [int] NOT NULL

	CONSTRAINT [PK_{objectQualifier}DnnChat_Rooms] PRIMARY KEY CLUSTERED 
	(
		[RoomId] ASC
	)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) 
	) 


	ALTER TABLE {databaseOwner}[{objectQualifier}DnnChat_Rooms] ADD  CONSTRAINT [DF_{objectQualifier}DnnChat_Rooms_RoomId]  DEFAULT (newid()) FOR [RoomId]
GO

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}DnnChat_ConnectionRecordRooms]') AND type in (N'U'))
	drop table {databaseOwner}{objectQualifier}DnnChat_ConnectionRecordRooms
GO

IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}DnnChat_ConnectionRecordRooms]') AND type in (N'U'))
	CREATE TABLE {databaseOwner}{objectQualifier}DnnChat_ConnectionRecordRooms
		(
		id int NOT NULL IDENTITY (1, 1),
		ConnectionRecordId int NOT NULL,
		RoomId uniqueidentifier NOT NULL,
		JoinDate datetime NOT NULL,
		DepartedDate datetime NULL
		)  
	ALTER TABLE {databaseOwner}{objectQualifier}DnnChat_ConnectionRecordRooms ADD CONSTRAINT
		PK_{objectQualifier}DnnChat_ConnectionRecordRooms PRIMARY KEY CLUSTERED 
		(
		id
		) WITH( STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) 

GO


if not exists(select * from sys.columns 
	where Name = N'RoomId' and Object_ID = Object_ID(N'{databaseOwner}{objectQualifier}DnnChat_Messages'))  

ALTER TABLE {databaseOwner}{objectQualifier}DnnChat_Messages ADD
	RoomId [uniqueidentifier] NULL
GO


IF NOT EXISTS (SELECT * FROM {databaseOwner}{objectQualifier}DnnChat_Rooms)
Insert {databaseOwner}{objectQualifier}DnnChat_Rooms
	(
		RoomId
		, RoomName
		, Enabled
		, RoomDescription
		, RoomWelcome
		, Private
		, RoomPassword
		, CreatedDate
		, CreatedByUserId
		, LastUpdatedByUserId
		, LastUpdatedDate
		, ModuleId
	)
values
	(
		NEWID()
		, 'Lobby'
		, 1
		, 'This is the Lobby, the default room for the dnnCHAT module.'
		, 'Welcome to the Lobby! You can join other rooms by clicking on the Show Room List button.'
		, 0
		, Null
		, GETDATE()
		, -1
		, -1
		, GETDATE()
		, -1
	)


GO
/* updated the RoomID for existing messages that don't have a room */

Update {databaseOwner}{objectQualifier}DnnChat_Messages
set RoomId = (select top 1 RoomId from {databaseOwner}{objectQualifier}DnnChat_Rooms)
where RoomId is null

GO


IF NOT EXISTS (SELECT * FROM {databaseOwner}[{objectQualifier}HostSettings] WHERE SettingName = 'AUM_DoNotRewriteRegEx' )

	insert into {databaseOwner}{objectQualifier}hostsettings
	(SettingName
	, SettingValue
	, SettingIsSecure 
	, CreatedByUserId
	, CreatedOnDate
	, LastModifiedByUserId
	, LastModifiedOnDate
	)
	values(
	'AUM_DoNotRewriteRegEx'
	,'(\.axd)|/Rss\.aspx|/SiteMap\.aspx|\.ashx|/LinkClick\.aspx|/Providers/|/DesktopModules/|ctl=MobilePreview|/ctl/MobilePreview|/SignalR'
	, 0
	, -1
	, GETDATE()
	, -1
	, GETDATE()
	)

GO

IF EXISTS (SELECT * FROM {databaseOwner}[{objectQualifier}HostSettings] WHERE SettingName = 'AUM_DoNotRewriteRegEx' and SettingValue not like '%/signalr%' )

update {databaseOwner}{objectQualifier}hostsettings
	set settingValue = settingValue + '|/signalr' 
where settingname = 'AUM_DoNotRewriteRegEx'


GO









